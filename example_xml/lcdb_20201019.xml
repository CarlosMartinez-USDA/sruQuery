<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns="http://www.loc.gov/mods/v3"
    xmlns:mods="http://www.loc.gov/mods/v3" xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:f="http://functions/" xmlns:xd="http://www.oxygenxml.com/ns/doc/xsl"
    xmlns:zs="http://www.loc.gov/zing/srw/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:saxon="http://saxon.sf.net/"
    xsi:schemaLocation="http://www.loc.gov/mods/v3 http://www.loc.gov/standards/mods/v3/mods-3-7.xsd"
    exclude-result-prefixes="xs xd saxon zs xsi f #default" version="2.0">
    <xsl:strip-space elements="*"/>
    <xsl:output name="originalFile" method="xml" indent="yes" encoding="UTF-8" media-type="text/xml" version="1.0"/>
    <xsl:output name="archiveFile" method="xml" indent="yes" encoding="UTF-8" version="1.0" media-type="text/xml"/>
    <xsl:include href="commons/params.xsl"/>
    <xsl:include href="commons/functions.xsl"/>


    <xd:doc scope="stylesheet">
        <xd:desc>
            <xd:p><xd:b>Created on:</xd:b>ar 12, 2020</xd:p>
            <xd:p><xd:b>Author:</xd:b> Carlos.Martinez</xd:p>
            <xd:p/>
        </xd:desc>
    </xd:doc>


    <!-- <xsl:template match="/">
        <xsl:apply-templates/>
    </xsl:template>-->

    <xd:doc>
        <xd:desc/>
    </xd:doc>
    <xsl:template match="zs:name">
        <xsl:element name="{local-name()}">
            <xsl:apply-templates/>
        </xsl:element>
    </xsl:template>
    <xd:doc>
        <xd:desc/>
    </xd:doc>
    <!--   <xsl:template match="@* | node()">
        <xsl:copy>
            <xsl:apply-templates select="node() | @*"/>
        </xsl:copy>
    </xsl:template>-->



    <xd:doc>
        <xd:desc/>
    </xd:doc>
    <xsl:template match="/">
        <zs:searchRetrieveResponse>
            <modsCollection>
                <xsl:for-each select="*//mods" xpath-default-namespace="http://www.loc.gov/mods/v3">
                    <!--//*[namespace-uri() = 'http://www.loc.gov/mods/v3' and local-name() = 'mods']">-->
                    <zs:records xmlns:zs="http://www.loc.gov/zing/srw/">
                        <xsl:result-document encoding="UTF-8" indent="yes" method="xml"
                            media-type="text/xml" format="archiveFile"
                            href="{$workingDir}A-{$originalFilename}_{position()}.xml">
                            <xsl:copy-of select="."/>
                            <!--MODS-->
                        </xsl:result-document>
                    </zs:records>
                    <xsl:result-document encoding="UTF-8" indent="yes" method="xml"
                        media-type="text/xml" format="originalFile"
                        href="{$workingDir}N-{$originalFilename}_{position()}.xml">
                        <mods>
                            <xsl:namespace name="xlink" select="'http://www.w3.org/1999/xlink'"/>
                            <xsl:namespace name="xsi"
                                select="'http://www.w3.org/2001/XMLSchema-instance'"/>
                            <xsl:attribute name="xsi:schemaLocation"
                                select="normalize-space('http://www.loc.gov/mods/v3 http://www.loc.gov/standards/mods/v3/mods-3-7.xsd')"/>
                            <xsl:attribute name="version" select="'3.7'"/>
                            <xsl:apply-templates select="mods:titleInfo"/>
                            <xsl:apply-templates select="mods:name"/>
                            <xsl:apply-templates select="mods:typeOfResource"/>
                            <xsl:apply-templates select="mods:genre"/>
                            <xsl:apply-templates select="mods:originInfo"/>
                            <xsl:apply-templates select="mods:language"/>
                            <xsl:apply-templates select="mods:physicalDescription"/>
                            <xsl:apply-templates select="mods:abstract"/>
                            <xsl:apply-templates select="mods:tableOfContents"/>
                            <xsl:apply-templates select="mods:targetAudience"/>
                            <xsl:apply-templates select="mods:note"/>
                            <xsl:apply-templates select="mods:subject"/>
                            <xsl:apply-templates select="mods:classification"/>
                            <xsl:apply-templates select="mods:relatedItem"/>
                            <xsl:apply-templates select="mods:identifier"/>
                            <xsl:apply-templates select="mods:location"/>
                            <xsl:apply-templates select="mods:accessCondition"/>
                            <xsl:apply-templates select="mods:part"/>
                            <xsl:apply-templates select="mods:extension"/>
                            <xsl:apply-templates select="mods:recordInfo"/>
                            <xsl:call-template name="extension"/>
                        </mods>
                    </xsl:result-document>
                </xsl:for-each>
            </modsCollection>
        </zs:searchRetrieveResponse>
    </xsl:template>

    <!--titleInfo-->
    <xd:doc>
        <xd:desc><xd:a docid="titleInfo_id"> titleInfo</xd:a></xd:desc>
        <xd:param name="titles"/>
    </xd:doc>
    <xsl:template match="mods:titleInfo" xpath-default-namespace="http://www.loc.gov/mods/v3">
        <!--match="*[namespace-uri() = 'http://www.loc.gov/mods/v3' and local-name() = 'titleInfo']"
        xpath-default-namespace="http://www.loc.gov/mods/v3">-->
        <xsl:param name="titles" as="xs:string*"/>
        <titleInfo>
            <xsl:if test="@type">
                <xsl:attribute name="type">
                    <xsl:value-of select="@type"/>
                </xsl:attribute>
            </xsl:if>
            <xsl:if test="nonSort">
                <nonSort xml:space="preserve">
                        <xsl:value-of select="nonSort"/>
               </nonSort>
            </xsl:if>
            <title>
                <xsl:value-of select="normalize-space(title)"/>
            </title>
            <xsl:if test="subTitle">
                <subtitle>
                    <xsl:value-of select="subTitle"/>
                </subtitle>
            </xsl:if>
            <!--partNumber-->
            <xsl:choose>
                <xsl:when test="partNumber">
                    <partNumber>
                        <xsl:value-of select="partNumber"/>
                    </partNumber>
                    <partName>
                        <xsl:value-of select="partName"/>
                    </partName>
                </xsl:when>
                <xsl:when test="partName">
                    <partName>
                        <xsl:value-of select="partName"/>
                    </partName>
                </xsl:when>
            </xsl:choose>
        </titleInfo>
    </xsl:template>

    <xd:doc>
        <xd:desc/>
    </xd:doc>
    <xsl:template match="mods:name" xpath-default-namespace="http://www.loc.gov/mods/v3">
        <!--  match="*[namespace-uri() = 'http://www.loc.gov/mods/v3' and local-name() = 'name']"
        xpath-default-namespace="http://www.loc.gov/mods/v3">-->
        <name>
            <xsl:attribute name="type">
                <xsl:value-of select="@type"/>
            </xsl:attribute>
            <xsl:for-each select="namePart">
                <namePart>
                    <xsl:value-of select="."/>
                </namePart>
            </xsl:for-each>
        </name>
    </xsl:template>

    <xd:doc>
        <xd:desc/>
    </xd:doc>
    <xsl:template match="mods:typeOfResource" xpath-default-namespace="http://www.loc.gov/mods/v3">
        <!-- match="*[namespace-uri() = 'http://www.loc.gov/mods/v3' and local-name() = 'typeOfResource']"
        xpath-default-namespace="http://www.loc.gov/mods/v3">-->
        <typeOfResource>
            <xsl:value-of select="."/>
        </typeOfResource>
    </xsl:template>

    <xd:doc>
        <xd:desc/>
    </xd:doc>
    <xsl:template match="mods:genre" xpath-default-namespace="http://www.loc.gov/mods/v3">
        <!-- match="*[namespace-uri() = 'http://www.loc.gov/mods/v3' and local-name() = 'genre']"
        xpath-default-namespace="http://www.loc.gov/mods/v3">-->
        <genre>
            <xsl:attribute name="authority">
                <xsl:value-of select="@authority"/>
            </xsl:attribute>
            <xsl:value-of select="."/>
        </genre>
    </xsl:template>
    <xd:doc>
        <xd:desc/>
    </xd:doc>
    <xsl:template match="place">
        <xsl:for-each select="*">
            <place>
                <placeTerm>
                    <xsl:choose>
                        <xsl:when test="@authority='marc'">
                            <xsl:attribute name="authority">marccountry</xsl:attribute>
                        </xsl:when>
                        <xsl:when test="not(@authority)"/>
                        <xsl:otherwise>
                            <xsl:copy-of select="@authority"/>
                        </xsl:otherwise>
                    </xsl:choose>
                    <xsl:attribute name="type">
                        <xsl:value-of select="local-name()"/>
                    </xsl:attribute>
                    <xsl:value-of select="."/>
                </placeTerm>
            </place>
        </xsl:for-each>
    </xsl:template>
    <xd:doc>
        <xd:desc/>
        <xd:param name="sourceSeq"/>
    </xd:doc>
    <xsl:template match="mods:originInfo" xpath-default-namespace="http://www.loc.gov/mods/v3">
        <!--match="*[namespace-uri() = 'http://www.loc.gov/mods/v3' and local-name() = 'originInfo']"
        xpath-default-namespace="http://www.loc.gov/mods/v3">-->
<!--      <xsl:for-each-group select="" group-starting-with="place/placeTerm | publisher | dateIssued | issuance | frequency">-->
        <originInfo>
            <!--@displayLabel-->
            <xsl:if test="@displayLabel">
                <xsl:attribute name="displayLabel">
                    <xsl:value-of select="@displayLabel"/>
                </xsl:attribute>
            </xsl:if>
            <!--@altRepGroup-->
            <xsl:if test="@altRepGroup">
                <xsl:attribute name="altRepGroup">
                    <xsl:value-of select="@altRepGroup"/>
                </xsl:attribute>
            </xsl:if>
            <!--@eventType-->
            <xsl:if test="@eventType">
                <xsl:attribute name="eventType">
                    <xsl:value-of select="@eventType"/>
                </xsl:attribute>
            </xsl:if>
     <!--<originInfo/> has 11 subelements: <Place/PlaceTerm/>, <publisher/>, <dateIssued/>, dateCreated,
         dateCaptured, dateValid, copyrightDate, dateOther, edition, issuance, frequency-->
            <xsl:for-each select="place">
           <!-- <xsl:for-each-group select="node()" group-starting-with="place | publisher | dateIssued | issuance | frequency">
           -->     <place>
                    <placeTerm>
                        <xsl:if test="@type">
                            <xsl:attribute name="type">
                                <xsl:value-of select="@type"/>
                            </xsl:attribute>
                        </xsl:if>
                        <xsl:if test="@authority">
                            <xsl:attribute name="authority">
                                <xsl:value-of select="@authority"/>
                            </xsl:attribute>
                        </xsl:if>
                        <xsl:value-of select="."/>
                    </placeTerm>
                </place>
            </xsl:for-each>
            <!-- <dateCreated> <dateCaptured> <dateValid> <dateModified> <copyrightDate> <dateOther> <edition> -->
            <xsl:for-each select="publisher">
                <publisher>
                    <xsl:value-of select="."/>
                </publisher>
            </xsl:for-each>
            <xsl:for-each select="dateIssued">
                <dateIssued>
                    <xsl:if test="@encoding">
                        <xsl:attribute name="encoding">
                            <xsl:value-of select="@encoding"/>
                        </xsl:attribute>
                    </xsl:if>
                    <xsl:value-of select="."/>
                </dateIssued>
            </xsl:for-each>
                <xsl:for-each select="dateCreated">
                    <dateCreated>
                        <xsl:if test="@encoding">
                            <xsl:attribute name="encoding">
                                <xsl:value-of select="@encoding"/>
                            </xsl:attribute>
                        </xsl:if>
                        <xsl:value-of select="."/>
                    </dateCreated>
                </xsl:for-each>
                    <xsl:for-each select="dateCaptured">
                        <dateCaptured>
                            <xsl:if test="@encoding">
                                <xsl:attribute name="encoding">
                                    <xsl:value-of select="@encoding"/>
                                </xsl:attribute>
                            </xsl:if>
                            <xsl:value-of select="."/>
                        </dateCaptured>
                    </xsl:for-each>
                        <xsl:for-each select="dateValid">
                            <dateValid>
                                <xsl:if test="@encoding">
                                    <xsl:attribute name="encoding">
                                        <xsl:value-of select="@encoding"/>
                                    </xsl:attribute>
                                </xsl:if>
                                <xsl:value-of select="."/>
                            </dateValid>
                        </xsl:for-each>
                <xsl:for-each select="dateModified">
                    <dateModified>
                        <xsl:if test="@encoding">
                            <xsl:attribute name="encoding">
                                <xsl:value-of select="@encoding"/>
                            </xsl:attribute>
                        </xsl:if>
                        <xsl:value-of select="."/>
                    </dateModified>
                </xsl:for-each>
                <xsl:for-each select="copyrightDate">
                    <copyrightDate>
                        <xsl:if test="@encoding">
                            <xsl:attribute name="encoding">
                                <xsl:value-of select="@encoding"/>
                            </xsl:attribute>
                        </xsl:if>
                        <xsl:value-of select="."/>
                    </copyrightDate>
                </xsl:for-each>
                <xsl:for-each select="dateOther">
                    <dateOther>
                        <xsl:if test="@encoding">
                            <xsl:attribute name="encoding">
                                <xsl:value-of select="@encoding"/>
                            </xsl:attribute>
                        </xsl:if>
                        <xsl:value-of select="."/>
                    </dateOther>
                </xsl:for-each>
                    <xsl:for-each select="edition">
                        <edition>
                            <xsl:if test="@encoding">
                                <xsl:attribute name="encoding">
                                    <xsl:value-of select="@encoding"/>
                                </xsl:attribute>
                            </xsl:if>
                            <xsl:value-of select="."/>
                        </edition>
                    </xsl:for-each>
                   <xsl:for-each select="issuance">
                       <issuance>
                      <xsl:value-of select="."/>
                       </issuance>
                   </xsl:for-each>
            <xsl:for-each select="frequency">
                    <frequency>
                        <xsl:if test="@authority">
                        <xsl:attribute name="authority">
                            <xsl:value-of select="@authority"/>
                        </xsl:attribute>
                        </xsl:if>
                        <xsl:value-of select="."/>
                    </frequency>
            </xsl:for-each>
        </originInfo>
    </xsl:template>
   
    
   
            
          <!--  <xsl:when test="@monographic">monographic</xsl:when>
            <xsl:when test="@continuing">continuing</xsl:when>
            <xsl:when test="@multipart">multipart monograph</xsl:when>
            <xsl:when test="@"
            <xsl:when test="$leader7='m' and ($leader19=' ')">single unit</xsl:when>
            <xsl:when test="$leader7='m' and ($leader19='#')">single unit</xsl:when>
            <xsl:when test="$leader7='i'">integrating resource</xsl:when>
            <xsl:when test="$leader7='s'">serial</xsl:when>-->
 
    <xd:doc>
        <xd:desc/>
    </xd:doc>
    <xsl:template match="mods:language" xpath-default-namespace="http://www.loc.gov/mods/v3">
        <!--   match="*[namespace-uri() = 'http://www.loc.gov/mods/v3' and local-name() = 'language']"
        xpath-default-namespace="http://www.loc.gov/mods/v3">-->
        <language>
            <languageTerm>
                <xsl:if test="languageTerm/@authority">
                    <xsl:attribute name="authority">
                        <xsl:value-of select="languageTerm/@authority"/>
                    </xsl:attribute>
                </xsl:if>
                <xsl:if test="languageTerm/@type">
                    <xsl:attribute name="type">
                        <xsl:value-of select="languageTerm/@type"/>
                    </xsl:attribute>
                </xsl:if>
                <xsl:value-of select="."/>
            </languageTerm>
        </language>
    </xsl:template>


    <xd:doc>
        <xd:desc/>
    </xd:doc>
    <xsl:template match="mods:physicalDescription"
        xpath-default-namespace="http://www.loc.gov/mods/v3">
        <!-- match="*[namespace-uri() = 'http://www.loc.gov/mods/v3' and local-name() = 'physicalDescription']"
        xpath-default-namespace="http:o/www.loc.gov/mods/v3">-->
        <physicalDescription>
            <xsl:if test="form">
                <!--form-->
                <form>
                    <!--@type-->
                    <xsl:if test="form/@type">
                        <xsl:attribute name="type">
                            <xsl:value-of select="form/@type"/>
                        </xsl:attribute>
                    </xsl:if>
                    <!--@authority-->
                    <xsl:if test="form/@authority">
                        <xsl:attribute name="authority">
                            <xsl:value-of select="form/@authority"/>
                        </xsl:attribute>
                    </xsl:if>
                    <xsl:value-of select="form"/>
                </form>
            </xsl:if>
            <!--reformattingQuality-->
            <xsl:if test="reformattingQuality">
                <reformattingQuality>
                    <xsl:value-of select="reformattingQuality"/>
                </reformattingQuality>
            </xsl:if>
            <!--internetMediaType-->
            <xsl:if test="internetMediaType">
                <internetMediaType>
                    <xsl:value-of select="internetMediaType"/>
                </internetMediaType>
            </xsl:if>
            <!--extent-->
            <xsl:if test="extent">
                <extent>
                    <xsl:value-of select="extent"/>
                </extent>
            </xsl:if>
            <!--digitalOrigin-->
            <xsl:if test="digitalOrigin">
                <digitalOrigin>
                    <xsl:value-of select="digitalOrigin"/>
                </digitalOrigin>
            </xsl:if>
            <!--note-->
            <xsl:if test="note">
                <!--@type-->
                <xsl:if test="note/@type">
                    <xsl:attribute name="type">
                        <xsl:value-of select="form/@type"/>
                    </xsl:attribute>
                </xsl:if>
                <note>
                    <xsl:value-of select="note"/>
                </note>
            </xsl:if>
        </physicalDescription>

    </xsl:template>


    <xd:doc>
        <xd:desc/>
    </xd:doc>
    <xsl:template match="mods:note" xpath-default-namespace="http://www.loc.gov/mods/v3">
        <!-- match="*[namespace-uri() = 'http://www.loc.gov/mods/v3' and local-name() = 'note']"
        xpath-default-namespace="http://www.loc.gov/mods/v3">-->
        <note>
            <xsl:if test="@type">
                <xsl:attribute name="type">
                    <xsl:value-of select="@type"/>
                </xsl:attribute>
            </xsl:if>
            <xsl:if test="@altRepGroup">
                <xsl:attribute name="altRepGroup">
                    <xsl:value-of select="@altRepGroup"/>
                </xsl:attribute>
            </xsl:if>
            <xsl:value-of select="."/>
        </note>
    </xsl:template>

    <xd:doc>
        <xd:desc/>
    </xd:doc>
    <xsl:template match="mods:subject" xpath-default-namespace="http://www.loc.gov/mods/v3">
        <!-- match="*[namespace-uri() = 'http://www.loc.gov/mods/v3' and local-name() = 'subject']"
        xpath-default-namespace="http://www.loc.gov/mods/v3">-->
        <xsl:if test="normalize-space(.) != ''">
            <xsl:choose>
                <!-- check to see if there are any numbers in this coverage value -->
                <xsl:when test="matches(., '-')">
                    <xsl:choose>
                        <!-- if numbers follow a coordinate pattern, it's probably geo data -->
                        <xsl:when test='matches(., "\d+\.\d+")'>
                            <subject>
                                <geographic>
                                    <xsl:attribute name="authority">
                                        <xsl:value-of select="@authority"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="normalize-space(.)"/>
                                </geographic>
                            </subject>
                            <!--coverage-->
                        </xsl:when>
                        <!-- if there's no coordinate pattern, it's probably temporal data; put it in <subject><topic> -->
                        <xsl:otherwise>
                            <subject>
                                <topic>
                                    <xsl:attribute name="authority">
                                        <xsl:value-of select="@authority"/>
                                    </xsl:attribute>
                                    <xsl:value-of select="normalize-space(.)"/>
                                </topic>
                            </subject>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:when>
                <!-- if there are no numbers, it's probably geo data -->
                <xsl:otherwise>
                    <subject>
                        <geographic>
                            <xsl:attribute name="authority">
                                <xsl:value-of select="@authority"/>
                            </xsl:attribute>
                            <xsl:value-of select="normalize-space(.)"/>
                        </geographic>
                    </subject>
                    <!--coverage-->
                </xsl:otherwise>
            </xsl:choose>
        </xsl:if>
    </xsl:template>
    <!--old
            <xsl:if test="geographicCode">
                <georgraphicCode>
                    <xsl:attribute name="authority">
                        <xsl:value-of select="@authority"/>
                    </xsl:attribute>
                    <xsl:value-of select="."/>
                </georgraphicCode>
            </xsl:if>
            <xsl:if test="topic">
                <topic>
                    <xsl:attribute name="authority">
                        <xsl:value-of select="@authority"/>
                    </xsl:attribute>
                    <xsl:value-of select="."/>
                </topic>
            </xsl:if>
            <xsl:if test="genre">
                <genre>
                    <xsl:value-of select="."/>
                </genre>
            </xsl:if>
        
    </xsl:template>-->

    <xd:doc>
        <xd:desc/>
        <xd:param name="sourceSeq"/>
    </xd:doc>
    <xsl:template match="mods:classification" xpath-default-namespace="http://www.loc.gov/mods/v3">
        <!-- match="*[namespace-uri() = 'http://www.loc.gov/mods/v3' and local-name() = 'classification']"
        xpath-default-namespace="http://www.loc.gov/mods/v3">-->
        <classfication>
            <xsl:if test="@authority">
                <xsl:attribute name="authority">
                    <xsl:value-of select="@authority"/>
                </xsl:attribute>
            </xsl:if>
            <xsl:if test="@authorityURI">
                <xsl:attribute name="authorityURI">
                    <xsl:value-of select="@authorityURI"/>
                </xsl:attribute>
            </xsl:if>
            <xsl:if test="@valueURI">
                <xsl:attribute name="valueURI">
                    <xsl:value-of select="@valueURI"/>
                </xsl:attribute>
            </xsl:if>
            <xsl:if test="@altRepGroup">
                <xsl:attribute name="altRepGroup">
                    <xsl:value-of select="@altRepGroup"/>
                </xsl:attribute>
            </xsl:if>
            <xsl:if test="@displayLabel">
                <xsl:attribute name="displayLabel">
                    <xsl:value-of select="@displayLabel"/>
                </xsl:attribute>
            </xsl:if>
            <xsl:if test="@usage">
                <xsl:attribute name="usage">
                    <xsl:value-of select="@usage"/>
                </xsl:attribute>
            </xsl:if>
            <xsl:if test="@edition">
                <xsl:attribute name="edition">
                    <xsl:value-of select="@edition"/>
                </xsl:attribute>
            </xsl:if>
            <xsl:if test="@generator">
                <xsl:attribute name="generator">
                    <xsl:value-of select="@generator"/>
                </xsl:attribute>
            </xsl:if>
            <xsl:value-of select="."/>
        </classfication>
    </xsl:template>

    <xd:doc>
        <xd:desc/>
    </xd:doc>
    <xsl:template 
        match="*[namespace-uri() = 'http://www.loc.gov/mods/v3' and local-name() = 'relatedItem']"
        xpath-default-namespace="http://www.loc.gov/mods/v3">
        <!--match="mods:relatedItem" xpath-default-namespace="http://www.loc.gov/mods/v3">-->
        <relatedItem>
            <xsl:attribute name="type">
                <xsl:value-of select='@type'/>
            </xsl:attribute>
         <xsl:apply-templates select="mods:titleInfo"/>
         <xsl:apply-templates select="mods:identifier"/>
        </relatedItem>
    </xsl:template>

    <xd:doc>
        <xd:desc/>
        <xd:param name=""/>
    </xd:doc>
    <xsl:template match="mods:identifier" xpath-default-namespace="http://www.loc.gov/mods/v3">
        <identifier>
           <xsl:attribute name="type">
               <xsl:value-of select='@type'/>
           </xsl:attribute>
            <xsl:value-of select="."/>
        </identifier>
</xsl:template>
    <xd:doc>
        <xd:desc/>
    </xd:doc>
    <xsl:template match="mods:recordInfo" xpath-default-namespace="http://www.loc.gov/mods.v3">
        <recordInfo>
            <descriptionStandard>
                <xsl:value-of select="mods:descriptionStandard"/>
            </descriptionStandard>
            <recordContentSource>
                <xsl:if test="mods:recordContentSource/@authority">
                    <xsl:attribute name="authority">
                        <xsl:value-of select="mods:recordContentSource/@authority"/>
                    </xsl:attribute>
                </xsl:if>
                <xsl:value-of select="mods:recordContentSource"/>
            </recordContentSource>
            <recordCreationDate>
                <xsl:if test="mods:recordCreationDate/@encoding">
                    <xsl:attribute name="encoding">
                        <xsl:value-of select="mods:recordCreationDate/@encoding"/>
                    </xsl:attribute>
                </xsl:if>
                <xsl:value-of select="mods:recordCreationDate"/>
            </recordCreationDate>
            <recordChangeDate>
                <xsl:if test="mods:recordCreationDate/@encoding">
                    <xsl:attribute name="encoding">
                        <xsl:value-of select="mods:recordCreationDate/@encoding"/>
                    </xsl:attribute>
                </xsl:if>
                <xsl:value-of select="mods:recordChangeDate"/>
            </recordChangeDate>
            <recordIdentifier>
                <xsl:value-of select="mods:recordIdentifier"/>
            </recordIdentifier>
            <recordOrigin>
                <xsl:value-of select="mods:recordOrigin"/>
            </recordOrigin>
        </recordInfo>
    </xsl:template>
    <xd:doc name="extension" scope="component">
        <xd:desc>
            <xd:p><xd:b>vendorName:</xd:b> Name of the vendor supplying the metadata.</xd:p>
            <xd:p><xd:b>archiveFile:</xd:b> file (xml or zip) that originally heldsource
                data.</xd:p>
            <xd:p><xd:b>originalFilename:</xd:b> Name of the file currently being processed.</xd:p>
            <xd:p><xd:b>workingDir:</xd:b> Name of the directory containing the file currently being
                processed.</xd:p>
        </xd:desc>
    </xd:doc>
    <xsl:template name="extension">
        <xsl:comment>NAL extension template</xsl:comment>
        <extension>
            <vendorName>
                <xsl:value-of select="$vendorName"/>
            </vendorName>
            <archiveFile>
                <xsl:value-of select="$archiveFile"/>
            </archiveFile>
            <originalFile>
                <xsl:value-of select="$originalFilename"/>
            </originalFile>
            <workingDirectory>
                <xsl:value-of select="$workingDir"/>
            </workingDirectory>
            <filePath>
                <xsl:value-of select="$filePath"/>
            </filePath>
        </extension>
    </xsl:template>
</xsl:stylesheet>
